name: CMake_windows_mingw-w64

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }
    
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: git mingw-w64-${{matrix.env}}-gcc mingw-w64-${{matrix.env}}-cmake mingw-w64-${{matrix.env}}-make

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory "${{github.workspace}}\build"
      
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
      
    - name: Configure CMake
      shell: msys2 {0}
      working-directory: ${{github.workspace}}\build
      run: cmake $GITHUB_WORKSPACE -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: msys2 {0}
      working-directory: ${{github.workspace}}\build
      run: cmake --build . -j ${{steps.cpu-cores.outputs.count}} --config $BUILD_TYPE

    - name: Test
      shell: msys2 {0}
      working-directory: ${{github.workspace}}\build
      run: ctest -C $BUILD_TYPE --verbose
